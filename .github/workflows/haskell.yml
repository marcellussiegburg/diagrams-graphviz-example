name: Haskell CI

on:
  push:
    branches:
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        plan:
          - { build: stack }

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install ${{ matrix.os }} Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: ${{ matrix.apt-get }}
        brew: ${{ matrix.brew }}

    - uses: actions/checkout@v2

    - name: Cache Stack
      id: cache-stack
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-stack-home

    - name: Setup stack
      uses: mstksg/setup-stack@v1

    - name: Setup ghc ${{ matrix.plan.ghc }} and cabal-install ${{ matrix.plan.cabal-install }}
      uses: actions/setup-haskell@81544724478d8ba4d4e38eddea0351a215d25291
      with:
        ghc-version: ${{ matrix.plan.ghc }}
        cabal-version: ${{ matrix.plan.cabal-install }}
      if: matrix.plan.build == 'cabal'

    - name: Install dependencies
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
            ;;
          cabal)
            cabal --version
            cabal update
            PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
            cabal install --only-dependencies --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}

    - name: Build
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
            ;;
          cabal)
            PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
            cabal install --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
            ORIGDIR=$(pwd)
            for dir in $PACKAGES
            do
              cd $dir
              cabal check || [ "$CABALVER" == "1.16" ]
              cabal sdist
              PKGVER=$(cabal info . | awk '{print $2;exit}')
              SRC_TGZ=$PKGVER.tar.gz
              cd dist
              tar zxfv "$SRC_TGZ"
              cd "$PKGVER"
              cabal configure --ghc-options -O0
              cabal build
              cd $ORIGDIR
            done
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}
